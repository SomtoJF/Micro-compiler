(()=>{"use strict";console.log("compiling..."),function(e){for(var t=[],s=0;s<19;s++){var a=e.charAt(s);if("("!==a)if(")"!==a){if(!/\s/.test(a)){var l=/[0-9]/;if(l.test(a)){for(var r="";l.test(a);)r+=a,a=e[++s];t.push({type:"number",value:r}),--s}else if('"'!==a){var o=/[a-z]/i;if(o.test(a)){for(r="";o.test(a);)r+=a,a=e[++s];t.push({type:"name",value:r})}}else{r="";for(a=e[++s];'"'!==a;)r+=a,a=e[++s];t.push({type:"string",value:r})}}}else t.push({type:"paren",value:")"});else t.push({type:"paren",value:"("})}console.log(t)}('(concat "hell" "o")')})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJtQkFFQUEsUUFBUUMsSUFBSSxnQkFJWixTQUFtQkMsR0FHZixJQUZBLElBQUlDLEVBQThCLEdBRXpCQyxFQUFVLEVBQUdBLEVBQVVGLEdBQWNFLElBQVcsQ0FDckQsSUFBSUMsRUFBT0gsRUFBTUksT0FBT0YsR0FFeEIsR0FBYSxNQUFUQyxFQUtKLEdBQWEsTUFBVEEsR0FNSixJQURpQixLQUNGRSxLQUFLRixHQUFwQixDQUlBLElBQUlHLEVBQVUsUUFDZCxHQUFJQSxFQUFRRCxLQUFLRixHQUFqQixDQU9JLElBTkEsSUFBSUksRUFBUSxHQU1MRCxFQUFRRCxLQUFLRixJQUNoQkksR0FBU0osRUFDVEEsRUFBT0gsSUFBUUUsR0FJbkJELEVBQU9PLEtBQUssQ0FBRUMsS0FBTSxTQUFVRixNQUFLLE1BSWpDTCxDLE1BWU4sR0FBYSxNQUFUQyxFQUFKLENBY0EsSUFBTU8sRUFBVSxTQUNoQixHQUFJQSxFQUFRTCxLQUFLRixHQUFPLENBRXBCLElBRElJLEVBQVEsR0FDTEcsRUFBUUwsS0FBS0YsSUFDaEJJLEdBQVNKLEVBQ1RBLEVBQU9ILElBQVFFLEdBRW5CRCxFQUFPTyxLQUFLLENBQUVDLEtBQU0sT0FBUUYsTUFBSyxHLE1BckJyQyxDQUNRQSxFQUFRLEdBSVosSUFGQUosRUFBT0gsSUFBUUUsR0FFQyxNQUFUQyxHQUNISSxHQUFTSixFQUNUQSxFQUFPSCxJQUFRRSxHQUduQkQsRUFBT08sS0FBSyxDQUFFQyxLQUFNLFNBQVVGLE1BQUssRyxRQWpEbkNOLEVBQU9PLEtBQUssQ0FBRUMsS0FBTSxRQUFTRixNQUFPLFdBTHBDTixFQUFPTyxLQUFLLENBQUVDLEtBQU0sUUFBU0YsTUFBTyxLLENBb0U1Q1QsUUFBUUMsSUFBSUUsRUFFaEIsQ0FFQVUsQ0FqRmMsc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9NaWNyby1jb21waWxlci8uL21haW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdG9rZW5pemVyUmV0dXJuVHlwZSwgVG9rZW5JbnRlcmZhY2UgfSBmcm9tICcuL1R5cGVzJztcblxuY29uc29sZS5sb2coJ2NvbXBpbGluZy4uLicpO1xuXG5jb25zdCBpbnB1dCA9ICcoY29uY2F0IFwiaGVsbFwiIFwib1wiKSc7XG5cbmZ1bmN0aW9uIHRva2VuaXplcihpbnB1dDogc3RyaW5nKTogdG9rZW5pemVyUmV0dXJuVHlwZSB7XG4gICAgbGV0IHRva2VuczogdG9rZW5pemVyUmV0dXJuVHlwZSA9IFtdO1xuXG4gICAgZm9yIChsZXQgY3VycmVudCA9IDA7IGN1cnJlbnQgPCBpbnB1dC5sZW5ndGg7IGN1cnJlbnQrKykge1xuICAgICAgICBsZXQgY2hhciA9IGlucHV0LmNoYXJBdChjdXJyZW50KTtcblxuICAgICAgICBpZiAoY2hhciA9PT0gJygnKSB7XG4gICAgICAgICAgICB0b2tlbnMucHVzaCh7IHR5cGU6ICdwYXJlbicsIHZhbHVlOiAnKCcgfSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGFyID09PSAnKScpIHtcbiAgICAgICAgICAgIHRva2Vucy5wdXNoKHsgdHlwZTogJ3BhcmVuJywgdmFsdWU6ICcpJyB9KTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IFdISVRFU1BBQ0UgPSAvXFxzLztcbiAgICAgICAgaWYgKFdISVRFU1BBQ0UudGVzdChjaGFyKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgTlVNQkVSUyA9IC9bMC05XS87XG4gICAgICAgIGlmIChOVU1CRVJTLnRlc3QoY2hhcikpIHtcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9ICcnO1xuICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAqIExvb3AgdGhyb3VnaCBlYWNoIGNoYXJhY3RlciBpbiB0aGUgc2VxdWVuY2UgdW50aWwgd2UgZW5jb3VudGVyIGEgY2hhcmFjdGVyIHRoYXRcbiAgICAgICAgICAgICAqIGlzIG5vdCBhIG51bWJlciwgcHVzaGluZyBlYWNoIGNoYXJhdGVyIHRoYXQgaXMgYSBudW1iZXIgdG8gb3VyIHZhbHVlIGFuZCBpbmNyZW1lbnRpbmdcbiAgICAgICAgICAgICAqIGBjdXJyZW50YCBhcyB3ZSBnb1xuICAgICAgICAgICAgICovXG4gICAgICAgICAgICB3aGlsZSAoTlVNQkVSUy50ZXN0KGNoYXIpKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgKz0gY2hhcjtcbiAgICAgICAgICAgICAgICBjaGFyID0gaW5wdXRbKytjdXJyZW50XTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQWZ0ZXIgdGhhdCB3ZSBwdXNoIG91ciBgbnVtYmVyYCB0b2tlbiB0byB0aGUgYHRva2Vuc2AgYXJyYXkuXG4gICAgICAgICAgICB0b2tlbnMucHVzaCh7IHR5cGU6ICdudW1iZXInLCB2YWx1ZSB9KTtcblxuICAgICAgICAgICAgLy8gQW5kIHdlIGNvbnRpbnVlIG9uLlxuICAgICAgICAgICAgLy8gY3VycmVudCBpcyB0aGUgY2hhciBhZnRlciB0aGUgbnVtYmVyIHNvIHdlIG5lZWQgdG8gZGVjcmVtZW50IGl0IHNvIHRoYXQgY2hhciBnZXRzIHRva2VuaXplZFxuICAgICAgICAgICAgLS1jdXJyZW50O1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBXZSdsbCBhbHNvIGFkZCBzdXBwb3J0IGZvciBzdHJpbmdzIGluIG91ciBsYW5ndWFnZSB3aGljaCB3aWxsIGJlIGFueVxuICAgICAgICAvLyB0ZXh0IHN1cnJvdW5kZWQgYnkgZG91YmxlIHF1b3RlcyAoXCIpLlxuICAgICAgICAvL1xuICAgICAgICAvLyAgIChjb25jYXQgXCJmb29cIiBcImJhclwiKVxuICAgICAgICAvLyAgICAgICAgICAgIF5eXiAgIF5eXiBzdHJpbmcgdG9rZW5zXG4gICAgICAgIC8vXG4gICAgICAgIC8vIFdlJ2xsIHN0YXJ0IGJ5IGNoZWNraW5nIGZvciB0aGUgb3BlbmluZyBxdW90ZTpcblxuICAgICAgICBpZiAoY2hhciA9PT0gJ1wiJykge1xuICAgICAgICAgICAgbGV0IHZhbHVlID0gJyc7XG5cbiAgICAgICAgICAgIGNoYXIgPSBpbnB1dFsrK2N1cnJlbnRdO1xuXG4gICAgICAgICAgICB3aGlsZSAoY2hhciAhPT0gJ1wiJykge1xuICAgICAgICAgICAgICAgIHZhbHVlICs9IGNoYXI7XG4gICAgICAgICAgICAgICAgY2hhciA9IGlucHV0WysrY3VycmVudF07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRva2Vucy5wdXNoKHsgdHlwZTogJ3N0cmluZycsIHZhbHVlIH0pO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBMRVRURVJTID0gL1thLXpdL2k7XG4gICAgICAgIGlmIChMRVRURVJTLnRlc3QoY2hhcikpIHtcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9ICcnO1xuICAgICAgICAgICAgd2hpbGUgKExFVFRFUlMudGVzdChjaGFyKSkge1xuICAgICAgICAgICAgICAgIHZhbHVlICs9IGNoYXI7XG4gICAgICAgICAgICAgICAgY2hhciA9IGlucHV0WysrY3VycmVudF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0b2tlbnMucHVzaCh7IHR5cGU6ICduYW1lJywgdmFsdWUgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc29sZS5sb2codG9rZW5zKTtcbiAgICByZXR1cm4gdG9rZW5zO1xufVxuXG50b2tlbml6ZXIoaW5wdXQpO1xuIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciLCJpbnB1dCIsInRva2VucyIsImN1cnJlbnQiLCJjaGFyIiwiY2hhckF0IiwidGVzdCIsIk5VTUJFUlMiLCJ2YWx1ZSIsInB1c2giLCJ0eXBlIiwiTEVUVEVSUyIsInRva2VuaXplciJdLCJzb3VyY2VSb290IjoiIn0=